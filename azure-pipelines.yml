trigger:
  branches:
    include:
      - main
      - releases/*
    exclude:
      - releases/old*

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    curl http://192.168.56.1:9000/api/server/version
  displayName: 'Test SonarQube API Connectivity'

# Prepare SonarQube analysis configuration
- task: SonarQubePrepare@7
  inputs:
    SonarQube: 'sonarqube_sc'
    scannerMode: 'cli'
    configMode: 'manual'
    cliProjectKey: 'voting_app_key'
    cliProjectName: 'voting_app'
    cliSources: '.'
    extraProperties: 'sonar.ws.timeout=180  # Increased timeout to 120 seconds'

# Install Java 17
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

# Compile the code (doesn't create jar)- task: Maven@4
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'compile package sonar:sonar'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: SonarQubePublish@7
  inputs:
    pollingTimeoutSec: '300'
# Final SonarQube Analysis (This task must be done after Maven build, and analysis should be triggered before Docker build)
- task: SonarQubeAnalyze@7
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

# Build and Push Docker Image
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub_sc'
    repository: 'pavan539/voting-app-java'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
