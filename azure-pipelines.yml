trigger:
  - main

pool:
  vmImage: ubuntu-latest  # Set the image to be used for the build

variables:
  tags: $(Build.BuildId)  # Tag with build ID

stages:
  - stage: Build_Image
    displayName: Build Docker Image
    jobs:
      - job: Build_Image
        displayName: Build Docker Image
        steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              echo "Building Docker image with tag $(tags)"
              docker build -t demoacr839.azurecr.io/voting-app:$(tags) .
              docker tag demoacr839.azurecr.io/voting-app:$(tags) demoacr839.azurecr.io/voting-app:latest
              docker images

  - stage: PushToACR
    displayName: Push Docker Image to ACR
    dependsOn: Build_Image  # Ensure the PushToACR stage runs after Docker build
    jobs:
      - job: PushToACR
        displayName: Push Docker Image to ACR
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'ado_sc'        # Azure subscription service connection
              scriptType: 'bash'                 # Use bash scripting
              scriptLocation: 'inlineScript'     # Inline script
              inlineScript: |
                # Login to Azure Container Registry (ACR)
                az acr login -n demoacr839
                
                # Check if the image exists locally (for debug purposes)
                echo "Listing all local Docker images"
                docker images
                
                # Push both the $(tags) and latest tags to ACR
                # First ensure that the image is tagged correctly
                docker tag demoacr839.azurecr.io/voting-app:$(tags) demoacr839.azurecr.io/voting-app:latest
                
                # Push both the $(tags) and latest tags
                docker push demoacr839.azurecr.io/voting-app:$(tags)
                docker push demoacr839.azurecr.io/voting-app:latest

                echo "Image successfully pushed to ACR."
