trigger:
  branches:
    include:
    - main
    - releases/*
    exclude:
    - releases/old*

pool:
  vmImage: ubuntu-latest

steps:
# Step 1: Install Java 17
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
    
# Step 2: Compile the code (doesn't create jar)
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'compile'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

# Step 3: Package the code (creates the jar)
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'package'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

# Step 4: List contents of target directory (debugging step)
- script: |
    echo "Listing contents of target directory"
    ls -l target/
  displayName: 'List contents of target directory'

# Step 5: Run tests (JUnit)
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'test'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

# Step 6: Verify (integration tests, checks)
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'verify'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

# Step 7: Build and Push Docker Image
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub_sc'
    repository: 'pavan539/voting-app-java'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
